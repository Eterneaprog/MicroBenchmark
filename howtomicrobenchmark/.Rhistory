learnr::run_tutorial("MicroBenchmark", package = "howtomicrobenchmark")
install.packages("~/GitHub/MicroBenchmark/howtomicrobenchmark.zip", repos = NULL, type = "win.binary")
learnr::run_tutorial("MicroBenchmark", package = "howtomicrobenchmark")
learnr::run_tutorial("MicroBenchmark.Rmd", package = "howtomicrobenchmark")
learnr::run_tutorial("MicroBenchmark.RMD", package = "howtomicrobenchmark")
learnr::run_tutorial("MicroBenchmark", package = "howtomicrobenchmark")
learnr::run_tutorial("MicroBenchmark", package = "howtomicrobenchmark")
rmarkdown::run("tutorial.Rmd")
rmarkdown::run("BenchMarking.Rmd")
rmarkdown::run("MicroBenchmark.Rmd")
learnr::run_tutorial("hello", package = "learnr")
learnr::run_tutorial("MicroBenchmark", package = "howtomicrobenchmark")
?microbenchmark
library(microbenchmark)
?microbenchmark
print(microbenchmark(3+3, 2+2+2, check = "equal" ))
print(microbenchmark(3+3, 2+2, check = "equal" ))
print(microbenchmark(3+3, 2+2, check = "identical" ))
print(microbenchmark(3+3, 2+2+2, check = "identical" ))
pi
pi*10
pi*100000000
pi == 16*Arctan(1/5) - 4*Arctan(1/239)
pi == 16*arctan(1/5) - 4*arctan(1/239)
pi == 16*atan(1/5) - 4*atan(1/239)
pi = 16*atan(1/5) - 4*atan(1/239)
rm(list=ls())
pi2 = 16*atan(1/5) - 4*atan(1/239)
pi
pi1=pi
print(microbenchmark(pi/2, 8*atan(1/5)-2*atan(1/239), check = "equal" ))
library(learnr)
library(ggplot2)
library(microbenchmark)
knitr::opts_chunk$set(echo = FALSE)
print(microbenchmark(pi/2, 8*atan(1/5)-2*atan(1/239), check = "identical" ))
